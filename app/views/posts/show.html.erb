<h4>
  <% if @post.flagged? %>
    <%= link_to post_flag_logs_path(@post), :style => "text-decoration:none"  do %>
      <span class="text-danger glyphicon glyphicon-flag" title="This post is a candidate for automatic flagging." href="#"></span>
    <% end %>
  <% end %>
  <%= title @post.title %>
  <% feedbacks = @post.feedbacks.to_a %>
  <strong class="post-feedbacks">
     <% feedbacks.each do |feedback| %>
       <% next if (feedback.is_positive? && feedback.is_negative?) || (!feedback.is_positive? && !feedback.is_negative? && !feedback.is_naa?) %>
         <span style="<%= "font-weight:normal" if feedback.is_naa? %>" data-toggle="tooltip" data-placement="top" title="<%= (feedback.user.present? || feedback.api_key_id.present?) ? "#{feedback.user.try(:username)} (From #{feedback.api_key.try(:app_name) || "Review"})" : feedback.user_name %>: <%= feedback.feedback_type %>" class="<%= element_class_for_feedback feedback %>"><%= element_symbol_for_feedback(feedback).html_safe %></span>
     <% end %>
  </strong>
  <% unless feedbacks.empty? %>
    <% if current_user.present? && (current_user.has_role?(:admin) || @post.feedbacks.where(:user_id => current_user.id).exists?) %>
      <small>
        <%= link_to "(clear)", clear_post_feedback_path(@post) %>
      </small>
    <% end %>
    <small><a data-post-id="<%= @post.id %>" href="#" class="admin-report" data-no-turbolinks=true>(needs admin)</a></small>
  <% end %>
</h4>

<% if user_signed_in? && current_user.has_role?(:reviewer) %>
  <p>
    <strong>Add feedback:</strong>
    <%= link_to raw('&#x2713'), review_feedback_path(post_id: @post.id, feedback_type: 'tpu'),
                class: 'feedback-button on-post text-success', remote: true, method: :post, data: { post_id: @post.id } %>
    <%= link_to raw('&#x2717'), review_feedback_path(post_id: @post.id, feedback_type: 'fp'),
                class: 'feedback-button on-post text-danger', remote: true, method: :post, data: { post_id: @post.id } %>
    <% if @post.link.nil? or @post.link.include? '/a/' %>
        <%= link_to raw('&#x1f4a9'), review_feedback_path(post_id: @post.id, feedback_type: 'naa'), class: 'feedback-button on-post text-warning',
                    remote: true, method: :post, data: { post_id: @post.id } %>
    <% end %>
  </p>
<% end %>

<div class="clearfix domain-tag-list">
  <p class="pull-left">
    <% if @post.post_tags.any? %>
      Tagged with:
      <% @post.post_tags.each do |t| %>
        <%= render 'domain_tags/post_tag', tag: t, post: @post %>
      <% end %>
    <% else %>
      <em>No tags.</em>
    <% end %>
  </p>

  <% if current_user&.has_role?(:core) %>
    <%= form_tag add_post_tag_path, method: :post, class: 'form-inline pull-left add-post-tag' do %>
      <%= hidden_field_tag :post_id, @post.id %>
      <%= text_field_tag :tag_name, '', class: 'form-control input-sm', list: 'tag_list' %>
      <datalist id="tag_list">
        <% DomainTag.all.each do |t| %>
          <option value="<%= t.name %>"></option>
        <% end %>
      </datalist>
      <%= submit_tag 'Add', class: 'btn btn-primary btn-sm' %>
    <% end %>
  <% end %>
</div>

<% unless @post.body.nil? %>
  <div data-postid="<%= @post.id.to_s %>" class="post-body">
    <hr>
    <pre class="post-body-pre-block"><%= @post.body %></pre>
  </div>
<% end %>

<hr>

<% unless @post.link.nil? %>
  <% unless @post.site_logo.nil? %>
    <%= image_tag @post.site_logo, size: "20" %>
  <% end %>
  <%= link_to "View on site", @post.link %>
  <% if @post.deleted_at %>
    <span class="text-danger">
      (deleted
        <span title="<%= (@post.deleted_at - @post.created_at).round(0) %> seconds">
          <%= distance_of_time_in_words(@post.created_at, @post.deleted_at, include_seconds: true) %>
        </span>
      after being reported)
    </span>
  <% end %>
<% end %>

<% unless @post.created_at.nil? %>
  <span class="text-muted" style="float:right">
    <span title="<%= @post.created_at %>">
      <%= "reported " + time_ago_in_words(@post.created_at).sub("about ", "") + " ago " %>
    </span>
    <% if @post.revision_count.to_i >= 2 %>
      | edited <%= number_to_multiplicative_quantifier @post.revision_count - 1 %>
    <% end %>
    <% unless @post.user_link.nil? %>
      | posted by
      <% unless @post.site_logo.nil? %>
        <%= link_to @post.user_link do %>
          <%= image_tag @post.site_logo, size: "20" %>
        <% end %>
      <% end %>
      <%= link_to @post.username, stack_exchange_user_path(@post.stack_exchange_user_id) if @post.stack_exchange_user_id.present? %>
      <% unless @post.user_reputation.nil? %>
        (<%= @post.user_reputation %>)
      <% end %>
    <% end %>
  </span>
<% end %>
<hr>

<p>Caught by:</p>

<ul>
  <% @post.reasons.each do |reason| %>
    <li><%= link_to reason.reason_name, "/reason/" + reason.id.to_s %> <span class="text-muted">(<%= reason.weight %>)</span></li>
  <% end %>
</ul>

<% if @post.reason_weight.present? %>
  <p class="text-muted">Reason weight: <%= @post.reason_weight %></p>
<% end %>

<% if @post.why.present? %>
  <pre><%= render_links @post.why %></pre>
<% end %>

<% if user_signed_in? && current_user.api_token.present? && !@post.is_fp && !@post.is_deleted? && Time.now - (@post.created_at || 1.day.ago) <= 1.hour && current_user.has_role?(:reviewer) %>
  <p>
    <%= link_to url_for(:controller => :posts, :action => :cast_spam_flag, :id => @post.id), :method => :post, :class => "text-danger" do %>
      <span class="glyphicon glyphicon-flag"></span> Spam flag
    <% end %>
  </p>
<% end %>

<% if current_user&.has_role?(:core) %>
  <p>
    <%= link_to new_abuse_report_path(reportable_type: 'Post', reportable_id: @post.id) do %>
      <span class="glyphicon glyphicon-file"></span> Create Abuse Report
    <% end %>
  </p>
<% end %>

<hr/>

<p>Contains domains:</p>
<% if @post.spam_domains.any? %>
  <ul>
    <% @post.spam_domains.each do |d| %>
      <li><%= render 'spam_domains/domain', domain: d %></li>
    <% end %>
  </ul><br/>
<% else %>
  <p><em>No domains</em></p>
<% end %>

<% @post.comments.each do |c| %>
  <%= render 'post_comments/comment', comment: c, feedback: @post.feedbacks.filter { |f| f.user_id == c.user_id } %>
<% end %>

<p><a href="#" class="new-comment"><span class="glyphicon glyphicon-plus"></span> Add a comment</a></p>

<div class="add-comment">
  <%= form_for PostComment.new, url: create_comment_path do |f| %>
    <%= f.hidden_field :post_id, value: @post.id %>
    <div class="field">
      <%= f.text_area :text, rows: 3, cols: 100, placeholder: 'Useful information about this post that others might need...', class: 'form-control' %>
    </div>
    <div class="actions">
      <%= f.submit 'Add Comment', class: 'btn btn-primary' %>
    </div>
  <% end %>
</div>

<% if user_signed_in? && current_user.has_role?(:developer) %>
  <div class="panel panel-danger">
    <div class="panel-heading">
      <h3 class="panel-title">Developer tools</h3>
    </div>
    <div class="panel-body">
      <ul>
        <li><%= link_to "Update feedback cache", url_for(:controller => :posts, :action => :reindex_feedback, :id => @post.id), :method => :post %></li>
        <li><%= link_to "Delete post", dev_delete_post_path(@post.id), method: :post, data: { confirm: "Are you sure you want to delete this post? This can't be undone." } %></li>
      </ul>
    </div>
  </div>
<% end %>
